name: Promptfoo Redteam (manual)

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to comment on (optional when triggered by PR)'
        required: false
        type: string
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  redteam:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Promptfoo auth login
        run: |
          npx promptfoo@latest auth login \
            --host https://www.promptfoo.app \
            --api-key sk-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJlY2M3MDE0Yy01N2ZkLTQ1ZjktYjJmMy00OTA3ZjQyNzk5ZjAiLCJvcmdhbml6YXRpb25JZCI6IjM2YmUwMTYyLTFiYmYtNDQ1Ny1iZGI0LWJmOGVkM2ZjZmM3YyIsInR5cGUiOiJ1c2VyX2FwaV90b2tlbiIsImlhdCI6MTc1NTU2ODcyMywiZXhwIjoxNzg3MTI2MzIzfQ.WsiENya35Z3ggX9Yz4_j5RKFm9JrNsR1is9vJyxxIWo

      - name: Run Promptfoo redteam
        run: |
          start=$(date +%s)
          npx promptfoo@latest redteam run \
            -c 9d32de26-7926-44f1-af13-bd06cb86f691 \
            -t 213c2235-865c-4aa4-90cc-a002256e0a94 \
            -j 5 \
            -o output.json || true
          end=$(date +%s)
          echo "DURATION_SECONDS=$((end-start))" >> $GITHUB_ENV
          test -f output.json || { echo 'output.json not found'; exit 1; }

      - name: Build redteam summary (JS)
        run: |
          node .github/scripts/redteam-summary.js --input output.json --out comment.md --print

      - name: Print summary file
        run: |
          echo "----- BEGIN SUMMARY -----"
          cat comment.md
          echo "------ END SUMMARY ------"
          # Also emit a workflow annotation with duration if set
          if [ -n "$DURATION_SECONDS" ]; then
            echo "::notice title=Redteam Duration::${DURATION_SECONDS}s"
          fi

      - name: Comment on PR (simple)
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('comment.md','utf8');
            const issue_number = context.payload.pull_request.number;
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number,
              body,
            });
