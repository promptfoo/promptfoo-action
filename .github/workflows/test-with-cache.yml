name: 'build-test-with-cache'
on:
  pull_request:
    paths:
      - 'prompts/**'
      - 'src/**'
      - 'action.yml'
      - '.github/workflows/**'

permissions:
  contents: read
  checks: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      # Cache npm dependencies
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-
      
      - run: npm ci
      - run: npm run all

  test-with-promptfoo-cache:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Fetch all history for git diff comparisons
      
      # Cache promptfoo evaluation results
      - name: Cache promptfoo evaluations
        id: cache-promptfoo
        uses: actions/cache@v4
        with:
          path: |
            ~/.promptfoo/cache
            .promptfoo-cache
          key: promptfoo-${{ runner.os }}-${{ hashFiles('prompts/**/*.json', 'prompts/**/*.txt', 'prompts/promptfooconfig.yaml') }}-${{ github.sha }}
          restore-keys: |
            promptfoo-${{ runner.os }}-${{ hashFiles('prompts/**/*.json', 'prompts/**/*.txt', 'prompts/promptfooconfig.yaml') }}-
            promptfoo-${{ runner.os }}-
      
      # Cache provider responses (OpenAI, etc.)
      - name: Cache API responses
        uses: actions/cache@v4
        with:
          path: ~/.promptfoo/provider-cache
          key: provider-cache-${{ runner.os }}-${{ hashFiles('prompts/**') }}-week-${{ steps.date.outputs.week }}
          restore-keys: |
            provider-cache-${{ runner.os }}-${{ hashFiles('prompts/**') }}-
            provider-cache-${{ runner.os }}-
      
      # Get current week for cache freshness
      - name: Get cache date
        id: date
        run: |
          echo "week=$(date +%Y-%U)" >> $GITHUB_OUTPUT
          echo "day=$(date +%Y-%m-%d)" >> $GITHUB_OUTPUT
      
      # Run the promptfoo action with caching enabled
      - uses: ./
        with:
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          prompts: |
            prompts/*.{json,txt}
            more-prompts/*.{json,txt}
          config: 'prompts/promptfooconfig.yaml'
          cache-path: '.promptfoo-cache'
          # Enable debug to see cache hits/misses
          debug: ${{ runner.debug == '1' }}
      
      # Save cache metrics for monitoring
      - name: Display cache statistics
        if: always()
        run: |
          echo "Cache restored: ${{ steps.cache-promptfoo.outputs.cache-hit }}"
          if [ -d ~/.promptfoo/cache ]; then
            echo "Cache size: $(du -sh ~/.promptfoo/cache | cut -f1)"
            echo "Cache files: $(find ~/.promptfoo/cache -type f | wc -l)"
          fi

  # Advanced caching with separate restore/save for fine control
  test-with-advanced-cache:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      
      # Restore cache at the beginning
      - name: Restore promptfoo cache
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.promptfoo/cache
            .promptfoo-cache
          key: promptfoo-adv-${{ runner.os }}-${{ hashFiles('prompts/**') }}-${{ github.run_id }}
          restore-keys: |
            promptfoo-adv-${{ runner.os }}-${{ hashFiles('prompts/**') }}-
            promptfoo-adv-${{ runner.os }}-
      
      - name: Setup cache environment
        run: |
          # Set cache environment variables for promptfoo
          echo "PROMPTFOO_CACHE_ENABLED=true" >> $GITHUB_ENV
          echo "PROMPTFOO_CACHE_TYPE=disk" >> $GITHUB_ENV
          echo "PROMPTFOO_CACHE_PATH=$HOME/.promptfoo/cache" >> $GITHUB_ENV
          echo "PROMPTFOO_CACHE_TTL=86400" >> $GITHUB_ENV  # 1 day for CI
          
          # Create cache directories if they don't exist
          mkdir -p ~/.promptfoo/cache
          mkdir -p .promptfoo-cache
      
      - uses: ./
        id: promptfoo-eval
        with:
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          prompts: |
            prompts/*.{json,txt}
          config: 'prompts/promptfooconfig.yaml'
          cache-path: '.promptfoo-cache'
      
      # Save cache after evaluation
      - name: Save promptfoo cache
        if: always() && steps.restore-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.promptfoo/cache
            .promptfoo-cache
          key: promptfoo-adv-${{ runner.os }}-${{ hashFiles('prompts/**') }}-${{ github.run_id }}

  # Docker layer caching for containerized workflows
  test-with-docker-cache:
    runs-on: ubuntu-latest
    if: false  # Disabled by default, enable if using Docker
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: docker-${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            docker-${{ runner.os }}-buildx-
      
      - name: Build Docker image with promptfoo
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: promptfoo-action:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            PROMPTFOO_VERSION=latest
      
      # Move cache to prevent growing indefinitely
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache